load_module modules/ngx_http_headers_more_filter_module.so;
worker_processes  1;

error_log  /dev/stderr warn;
pid /tmp/pid;

events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    client_body_temp_path /tmp/nginx 1 2;
    proxy_temp_path /tmp/nginx-proxy;
    fastcgi_temp_path /tmp/nginx-fastcgi;
    uwsgi_temp_path /tmp/nginx-uwsgi;
    scgi_temp_path /tmp/nginx-scgi;

    more_clear_headers Server;

    map $http_user_agent $excluded_ua {
        ~kube-probe  0;
        default      1;
    }


    log_format json escape=json '{ "time": "$time_iso8601", "remote_addr": "$remote_addr",'
      '"x-forward-for": "$proxy_add_x_forwarded_for", "request_id": "$request", "remote_user": '
      '"$remote_user", "bytes_sent": $bytes_sent, "request_time": $request_time, "status": '
      '$status, "vhost": "$host", "request_proto": "$server_protocol", "path": "$uri", '
      '"request_query": "$args", "request_length": $request_length, "duration": $request_time, '
      '"method": "$request_method", "http_referrer": "$http_referer", "http_user_agent": '
      '"$http_user_agent" }';

    access_log  /dev/stdout json if=$excluded_ua;

    sendfile        on;
    #tcp_nopush     on;
    server_tokens off;

    keepalive_timeout  65;

    #gzip  on;

    server {
	listen   5000;
	server_name  _;
        server_tokens off;

	root /app;
	error_log    /dev/stderr;

        location /healthz {
             access_log off;
 	     return 200 "OK\n";
        }
        error_page 400 /_400.html;
        location = /_400.html {
          internal;
          return 400 "Bad Request";
        }

        error_page 404 /_404.html;
        location = /_404.html {
          internal;
          return 404 "Path not found";
        }

        error_page 401 /_401.html;
        location = /_401.html {
          internal;
          return 401 "Not authorised.";
        }
        error_page 403 /_403.html;
        location = /_403.html {
          internal;
          return 403 "Forbidden.";
        }
        error_page 502 /_502.html;
        location = /_502.html {
          internal;
          return 502 "Bad Gateway.";
        }
        error_page 503 /_503.html;
        location = /_503.html {
          internal;
          return 503 "Unavailable.";
        }

	location / {
	    add_header X-Frame-Options SAMEORIGIN;
	    add_header X-Content-Type-Options nosniff;
	    add_header X-XSS-Protection 1;
	    add_header X-Content-Type-Options nosniff;
            add_header Strict-Transport-Security max-age=31536000;

            fastcgi_hide_header X-AspNet-Version;
            fastcgi_hide_header X-AspNetMvc-Version;
            fastcgi_hide_header X-Powered-By;

	    index index.html index.htm default.aspx Default.aspx Index.html;
	    fastcgi_index Index.html;
	    fastcgi_pass 127.0.0.1:9000;
	    include /etc/nginx/fastcgi_params;
	}
    }
}


worker_processes  1;

error_log  /dev/stderr warn;
pid /tmp/pid;

events {
    worker_connections  1024;
}


http {

    lua_package_path "/usr/local/site/lualib/?.lua;/rules/?.lua;;";
    lua_package_cpath "/usr/local/lua/5.1/?.so;;";

    lua_ssl_verify_depth 2;
    lua_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;

    init_by_lua_block {
        -- use resty.core for performance improvement, see the status note above
        require "resty.core"

	require "resty.cookie"

        -- require the base module
        local lua_resty_waf = require "resty.waf"

        -- perform some preloading and optimization
        lua_resty_waf.init()

        content_security_policy = os.getenv("HDR_CONTENT_SECURITY_POLICY")
        feature_policy = os.getenv("HDR_FEATURE_POLICY")

        session_secret = os.getenv("SESSION_SECRET")
        if not session_secret then
          local random = require "resty.random"
          session_secret = random.bytes(32)
        end

        ngx.log(ngx.STDERR, "STARTED")
    }

    include       mime.types;
    default_type  application/octet-stream;

    client_body_temp_path /tmp/nginx 1 2;
    proxy_temp_path /tmp/nginx-proxy;
    fastcgi_temp_path /tmp/nginx-fastcgi;
    uwsgi_temp_path /tmp/nginx-uwsgi;
    scgi_temp_path /tmp/nginx-scgi;

    more_clear_headers Server;

    map $http_user_agent $excluded_ua {
        ~kube-probe  0;
        ~GoogleStackdriverMonitoring-UptimeChecks 0;
        default      1;
    }


    log_format json escape=json '{ "time": "$time_iso8601", "remote_addr": "$remote_addr",'
      '"x-forward-for": "$proxy_add_x_forwarded_for", "request_id": "$request", "remote_user": '
      '"$remote_user", "bytes_sent": $bytes_sent, "request_time": $request_time, "status": '
      '$status, "vhost": "$host", "request_proto": "$server_protocol", "path": "$uri", '
      '"request_query": "$args", "request_length": $request_length, "duration": $request_time, '
      '"method": "$request_method", "http_referrer": "$http_referer", "http_user_agent": '
      '"$http_user_agent" }';

    access_log  /dev/stdout json if=$excluded_ua;
    error_log  /dev/stderr warn;

    sendfile        on;
    #tcp_nopush     on;
    server_tokens off;

    keepalive_timeout  65;

    #gzip  on;

    server {
	listen   5000;
	server_name  _;
        server_tokens off;

        # some applications have a header such as encrypted_rbac
        underscores_in_headers on;

        set $csp "connect-src *; default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; frame-ancestors 'self'; form-action 'self'; report-uri /.well-known/csp-violation-report-endpoint/";
        set $fp "vibrate 'self'; sync-xhr *; notifications 'self'; geolocation 'self'";
        set $encrypted_rbac $http_encrypted_rbac;

	root /app;

        log_by_lua_block {
            print("I need no extra escaping here, for example: \r\nblah")
        }

        set_by_lua_block $content_security_policy {
            if (content_security_policy ~=  nil and content_security_policy ~= '') then
                return content_security_policy
	    else
                return ngx.var.csp
            end
	}

        set_by_lua_block $feature_policy {
            if (feature_policy ~=  nil and feature_policy ~= '') then
                return content_security_policy
	    else
                return ngx.var.fp
            end
	}

        location /healthz {
             access_log off;
 	     return 200 "OK\n";
        }
# We have explicit pages for errors to avoid fingerprinting
# CWE-200 https://cwe.mitre.org/data/definitions/200.html
        error_page 400 /_400.html;
        location = /_400.html {
          internal;
          return 400 "Bad Request";
        }

        error_page 404 /_404.html;
        location = /_404.html {
          internal;
          return 404 "Path not found";
        }

        error_page 401 /_401.html;
        location = /_401.html {
          internal;
          return 401 "Not authorised.";
        }
        error_page 403 /_403.html;
        location = /_403.html {
          internal;
          return 403 "Forbidden.";
        }
        error_page 502 /_502.html;
        location = /_502.html {
          internal;
          return 502 "Bad Gateway.";
        }
        error_page 503 /_503.html;
        location = /_503.html {
          internal;
          return 503 "Unavailable.";
        }

	add_header X-Frame-Options SAMEORIGIN;
	add_header X-Content-Type-Options nosniff;
	add_header X-XSS-Protection 1;
	add_header Strict-Transport-Security max-age=63072000;
	add_header Referrer-Policy strict-origin;
	add_header Content-Security-Policy $content_security_policy;
        add_header Feature-Policy $feature_policy;

        include /rules/server.d/*.conf;

	index index.html index.htm default.aspx Default.aspx Index.html Index.htm;
        include serve.conf;

        # Receive and blackhole the csp reports, they will be available in access log
        location /.well-known/csp-violation-report-endpoint/ {
          add_header Content-Type text/plain;
          return 204;
        }
    }
}

